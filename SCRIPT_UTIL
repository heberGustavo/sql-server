--***** MODELO DE TRANSACTION *****
 
DECLARE @SUCESS INT = 1
 
BEGIN TRANSACTION 
BEGIN TRY  
 
	********ADICIONA O SQL AQUI
END TRY
BEGIN CATCH
	ROLLBACK TRANSACTION
	SET @SUCESS = 0
 
	SELECT ERROR_NUMBER() AS ErrorNumber,ERROR_MESSAGE() AS ErrorMessage;  
END CATCH
 
IF(@SUCESS = 1)
BEGIN
    COMMIT TRANSACTION
END
GO
 
 
-- ***** CONSTRAINT DEFAULT COM NOME PERSONALIZADO *****
 
ALTER TABLE TB_FUNDAMENTOS
ADD FUN_TIPIFICACAO INT NULL;
 
ALTER TABLE TB_FUNDAMENTOS
ADD CONSTRAINT DF_TB_FUNDAMENTOS_FUN_TIPIFICACAO DEFAULT NULL FOR FUN_TIPIFICACAO;
 
 
-- ***** BUSCA NAS TABELAS POR NOME DE COLUNA *****
 
SELECT
	T.name AS Tabela,
	C.name AS Coluna
FROM
	sys.sysobjects AS T (NOLOCK)
INNER JOIN sys.all_columns AS C (NOLOCK) ON T.id = C.object_id AND T.XTYPE = 'U'
WHERE
	C.NAME LIKE '%INATIVO%'
ORDER BY
	T.name ASC
 
 
-- ***** BUSCA OS LUGARES QUE ESTA POR NOME *****
SELECT A.NAME, A.TYPE, B.TEXT
  FROM SYSOBJECTS  A (nolock) JOIN SYSCOMMENTS B (nolock) ON A.ID = B.ID
WHERE B.TEXT LIKE '%PR_REGIOES_LISTAR%'  --- Informação a ser procurada no corpo da procedure, funcao ou view
  AND A.TYPE = 'P'                     --- Tipo de objeto a ser localizado no caso procedure
  --AND A.TYPE IN ('FN', 'TF', 'IF')           --- Tipo de objeto: funções escalares, com valor de tabela e embutidas
ORDER BY A.NAME
GO


--- ***** MODELO PARA SEPARAR ITENS POR VIRGULA *****
 
DECLARE @CNS_IDS  VARCHAR(100) = (
			SELECT  STUFF(( SELECT  ',' + CAST(CNS_ID as varchar(100)) 
							FROM TB_DOCUMENTO_GERADO_TIR 
							WHERE DOC_ID = 3037
						    FOR
							  XML PATH('')
						    ), 1, 1, ''
			) CNS_IDS
)


--- ***** MODELO PARA LER ITENS POR VIRGULA - OUTRO MODO  *****
 
	DECLARE @TESTE VARCHAR(100) = '1,5,6,8,7,9,11'
	SELECT item as IDS FROM Split(@TESTE, ',') AS Data  
	EX: WHERE FUN_ID IN (SELECT CAST(ITEM AS INT) FROM dbo.SPLIT(@EMP_IDS, ',')))
 
 
--- ***** CONVERTER DATA PARA PT-BR *****
CONVERT(VARCHAR(MAX), CAST(DGV.DGV_DATA_HORA_GERACAO AS DATE), 103) + ' ' + CONVERT(VARCHAR(MAX), CAST(DGV.DGV_DATA_HORA_GERACAO AS TIME), 108) AS data_documento
 
 
--- ***** VERIFICA SE A COLUNA EXISTE NA TABELA *****
IF NOT EXISTS(SELECT 1 FROM SYSCOLUMNS where id = object_id('TB_INDICADORES_PADROES_CRITERIOS') and name = 'IPC_VALIDAR_PERCENTUAL')
	ALTER TABLE tableName
	ADD columnName dataType,
	CONSTRAINT fkName FOREIGN KEY(fkColumnName) 
    REFERENCES pkTableName(pkTableColumnName);
GO
 
 
--- ***** VALIDAÇÃO DA TABELA TEMPORARIA *****
IF OBJECT_ID('TEMPDB..#MANIFESTACOES_HIST_TEMP') IS NOT NULL
		DROP TABLE #MANIFESTACOES_HIST_TEMP
 
 
--- ***** DROP COLUMN WITH CONTRAINT *****
ALTER TABLE Y DROP CONSTRAINT X
ALTER TABLE Y DROP COLUMN X
 
 
--- ***** FILTRO NÃO OBRIGATORIO *****
AND (@USA_INATIVO IS NULL OR USA.USA_INATIVO = @USA_INATIVO)


--- ***** SCRIPT PARA BUSCAR DENTRO DE PROCEDURE O NOME DE FUNÇÕES *****
DECLARE @nome_funcao NVARCHAR(128) = 'fn_listarPeriodoReferenciaImportacao';
 
SELECT 
    DISTINCT o.name AS ProcedureName
FROM 
    sys.sql_modules m
    INNER JOIN sys.objects o ON m.object_id = o.object_id
WHERE 
    m.definition LIKE '%' + @nome_funcao + '%'
    AND o.type_desc = 'SQL_STORED_PROCEDURE';
